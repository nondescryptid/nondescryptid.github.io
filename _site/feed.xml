<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tufte-Jekyll</title>
    <description>A Jekyll theme for content-rich sites</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 08 Sep 2022 09:00:10 -0400</pubDate>
    <lastBuildDate>Thu, 08 Sep 2022 09:00:10 -0400</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>day 21</title>
        <description>&lt;p&gt;Took part in a Go workshop by Chuk organised by GeeksHacking, where we made a command line tool that interacts with the Boardgame Atlas API to search for board games.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;bit.ly/golang_for_programmers&quot;&gt;Slides can be found here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1S2bS0Wvevd3_Cb8DwDXYD4Swwq_3IDlfVuFY1V2lesg/edit#slide=id.p&quot;&gt;alt link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;go&quot;&gt;Go&lt;/h1&gt;
&lt;p&gt;Languages can be thought of in terms of STRONG vs WEAK typing, and static v dynamic&lt;/p&gt;

&lt;h1 id=&quot;where-go-is-used&quot;&gt;Where Go is used&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Infra like Kubernetes and Docker&lt;/li&gt;
  &lt;li&gt;Cloud native devt (writing RESTful [message-based] web apps; gRPC (another service style))&lt;/li&gt;
  &lt;li&gt;Replacing existing infra such as CoreDNS/Caddy (reverse proxy - nginx is an alternative to Caddy. Chuk likes Caddy bc it just has one binary to deal with)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;go-data-types&quot;&gt;Go Data Types&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;string&lt;/li&gt;
  &lt;li&gt;rune (equivalent of a char in JS)&lt;/li&gt;
  &lt;li&gt;number int, uint (no negative numbers), floats&lt;/li&gt;
  &lt;li&gt;complex&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name string

var age uint8 = 21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;arrays--slices-dynamic-arrays&quot;&gt;Arrays &amp;amp; Slices (dynamic arrays)&lt;/h1&gt;

&lt;h2 id=&quot;arrays-fixed-size&quot;&gt;Arrays (fixed size)&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name [5]string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;slices&quot;&gt;Slices&lt;/h2&gt;

&lt;p&gt;Looks like you declare the upper limit of memory it can have (e.g. 5 items) and then append items without necessary using all of the memory allocated&lt;/p&gt;

&lt;p&gt;TODO: look up arrays vs Slices&lt;/p&gt;

&lt;h1 id=&quot;loops&quot;&gt;Loops&lt;/h1&gt;

&lt;h1 id=&quot;pointers&quot;&gt;Pointers&lt;/h1&gt;

&lt;p&gt;Python etc have a concept of a reference - a pointer-like thing to an object&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;in Java, objects arrays etc are references but primitives are not references.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chuk: “You wont ask an F1 driver to ask slowly right. Sometimes you want the freedom to do stupid things [as an engineer].”&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name := &quot;fred&quot;

&amp;amp;name #gives you the address of a var 

*&amp;amp;name == &quot;fred&quot; # gives you contents of the address 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This allows you to have double pointers that allow “dynamic addressing” (TODO: look up)&lt;/p&gt;

&lt;p&gt;And anything can be passed by reference or value into functions&lt;/p&gt;

&lt;h1 id=&quot;creating-custom-types&quot;&gt;Creating custom types&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type natural unit32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or create objects&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Customer struct {
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Function types&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Apply[T any] func(T,T)T 

# function takes 2 params of type T, and returns type T. 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;visibility-of-vars&quot;&gt;Visibility of vars&lt;/h1&gt;
&lt;p&gt;If a var starts with uppercase it is public, and lowercase is private.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Chuk: “You either see it or you don’t”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;class-like&quot;&gt;Class-like&lt;/h1&gt;
&lt;p&gt;Can write functions that are only accessible by certain structs&lt;/p&gt;

&lt;p&gt;Receiver function must be in the same module&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Critique of Go: You extend or implement an interface, but there’s no explicit stuff like that in Go. Go handles it implicitly where if your struct has methods of the interface, it is considered implemented.&lt;/p&gt;

  &lt;p&gt;This makes reading code a bit difficult because a param can require a reader but you have to figure out which structs implement a reader, then hunt down the methods in that reader.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;TODO: Find out what’s a thread … Chuk is talking about threads but I don’t know what it’s about&lt;/p&gt;

&lt;h1 id=&quot;communicating-between-routines&quot;&gt;Communicating between routines&lt;/h1&gt;

&lt;p&gt;Use a built-in primitive called channels.&lt;/p&gt;

&lt;p&gt;To read:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.educative.io/answers/what-are-channels-in-golang&quot;&gt;What are channels in Golang?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;todays-workshop&quot;&gt;Today’s workshop&lt;/h1&gt;

&lt;p&gt;Building a command line tool to search for board games&lt;/p&gt;

&lt;p&gt;If there’s time:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pretty print results&lt;/li&gt;
  &lt;li&gt;Cross compile to other platforms e.g. Linux to Windows&lt;/li&gt;
  &lt;li&gt;Write a multi threaded version if time permits&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;initialise-project-as-a-go-project&quot;&gt;Initialise project as a Go project&lt;/h2&gt;
&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod init&lt;/code&gt; in the directory where your project is. It should create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go.mod&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;my-first-go-program-&quot;&gt;My first Go program :)&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

func main() {
    fmt.Println(&quot;hello, world&quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run programs with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go run .&lt;/code&gt; in the directory where your go program file is stored.&lt;/p&gt;

&lt;h2 id=&quot;boardgame-api&quot;&gt;Boardgame API&lt;/h2&gt;

&lt;p&gt;We are using the Search endpoint: https://www.boardgameatlas.com/api/docs/search&lt;/p&gt;

&lt;p&gt;We need:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Search term&lt;/li&gt;
  &lt;li&gt;Client id&lt;/li&gt;
  &lt;li&gt;Limit (e.g. 10)&lt;/li&gt;
  &lt;li&gt;Skip (e.g. 0)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compiling&quot;&gt;Compiling&lt;/h2&gt;
&lt;p&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go build .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go run&lt;/code&gt; is for devt purposes.&lt;/p&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions&lt;/h2&gt;
&lt;p&gt;What are pointers and references?
What does strong and weak typing mean, and when would someone prefer a language that’s strongly/weakly typed?&lt;/p&gt;

&lt;h2 id=&quot;adding-colors&quot;&gt;Adding colors:&lt;/h2&gt;
&lt;p&gt;Cool repo to add colors to the command line output: https://github.com/fatih/color
run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go get github.com/fatih/color&lt;/code&gt; in your project dir&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-21</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-21</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 20</title>
        <description>&lt;p&gt;Started learning Django out of necessity for work.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I only managed to spend 30 minutes today on learning Django (got started with virtual env and setting up a django project + understanding the settings file), but I’m glad I spent that time instead of spending no time at all. Putting my learning at the start of the day before other work tasks was nice as it gave me the security of knowing that I’d done some learning by lunchtime, and that I didn’t have to learn stuff at the end of the work day at night when my energy’s depleted.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Aug 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-20</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-20</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 19</title>
        <description>&lt;p&gt;Touched more server-side stuff. Learned to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;screen&lt;/code&gt; on a server to manage sessions and update sites.&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Aug 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-19</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-19</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 18</title>
        <description>&lt;p&gt;Created reusable components in React for a volunteering project.
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;This project involved some really tight timelines, so I was really just doing stuff manually (i.e. copy-pasting and tweaking things slightly) because it took less effort than thinking through how to add props and make a component reusable. However, I finally got some time to think about and implement it, which was worth the time as it means that we won’t be clogging up the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; folder with lots of different files in the future.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Aug 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-18</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-18</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 17</title>
        <description>&lt;p&gt;Joys of pair programming and fiddling with Liquid + Shopify metafields 
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;I debugged something with a coworker today, which was nice. A html element wasn’t showing up on a Shopify dev store page (e.g. instead of (0/6) it’d just show (0/ )), and we were trying to figure out why. We compared the HTML of the live store versus the dev store and realised that the value attribute of that element on the dev store was missing altogether. After digging into the Liquid file that the page was generated from, we realised that the value attribute was retrieving its value from an object (a Shopify metafield – like product.metafields.namespace.key) that didn’t exist on the dev store, as it wasn’t copied over when we copied products over to the dev store. Thinking out loud, figuring out the bug and fixing it together was quite fun.&lt;/p&gt;

&lt;p&gt;Also had to work more with Liquid today as I was changing a template for invoices.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jul 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-17</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-17</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 16</title>
        <description>&lt;p&gt;Using .filter(), and thinking about reusable components
&lt;!--more--&gt;&lt;/p&gt;

&lt;h1 id=&quot;volunteering&quot;&gt;Volunteering&lt;/h1&gt;

&lt;p&gt;Learned to use .filter() to filter messages for various recipients from a larger array of messages. This is quite a rushed job so I’ve been writing a lot of inelegant code. One improvement I want to make is to create a reusable components that I can pass props into, because a lot of the things I’m making have the same template but with a few variables that are tweaked.&lt;/p&gt;

&lt;h1 id=&quot;work&quot;&gt;Work&lt;/h1&gt;

&lt;p&gt;Conducted a demo/training on how to use Git to collaborate. I realise I quite enjoy writing documentation and teaching, although how skilled I am is another question altogether.&lt;/p&gt;

&lt;h1 id=&quot;inter-alia&quot;&gt;Inter alia&lt;/h1&gt;
&lt;p&gt;I’ve also disappeared for a month and have done programming in the interim, just that I wasn’t very diligent about recording it. :P&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Jul 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-16</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-16</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 15</title>
        <description>&lt;p&gt;Wrote documentation on how to use git (e.g. using branches, making pull requests, setting remote repos) for my workplace. It’s on Notion, titled &lt;a href=&quot;https://wakeful-table-63f.notion.site/Working-with-Git-c4e3c3d335884ed2987f81f99b8835aa&quot;&gt;Working with Git&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Jun 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-15</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-15</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 14</title>
        <description>&lt;p&gt;Set cookies for JSON Web Tokens with Flask and added support for the use of credentials in cross-origin requests.&lt;/p&gt;

&lt;!--more--&gt;
&lt;p&gt;Got nerfed by a cough (probably caught it on the plane) and fell off the wagon – inertia is very real, and the longer I put off setting up a routine + updating my blog regularly the harder it becomes to start again.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jun 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-14</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-14</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 13</title>
        <description>&lt;p&gt;Set up node to communicate with a Flask backend that someone else built for a volunteering project. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Reorganised code to place the frontend I built and the backend someone else built in the same repo, so I can use relative routes like “/login” instead of exposing the server address of what I’m working on like XX.XX.XX:XXXX/login.&lt;/p&gt;

&lt;p&gt;Also had to figure out why env variables couldn’t be accessed by Flask, then I realised I needed to use the dotenv library to retrieve variables from an .env file.&lt;/p&gt;

&lt;p&gt;I found the following articles useful:
&lt;a href=&quot;https://medium.com/zero-equals-false/how-to-connect-a-react-frontend-with-node-js-bccb1fb7e2bb&quot;&gt;Easiest Way to Connect a React Frontend with Node.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javarevisited/connecting-flask-with-node-js-7b9d823ca923&quot;&gt;Connecting Flask with Node.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.nylas.com/blog/making-use-of-environment-variables-in-python/&quot;&gt;Making Use of Environment Variables in Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I didn’t work on my projects for a while as I made the mistake of going out to meet friends too many times in a week when I don’t really have the social batteries for it. Looking forward to pacing myself better in the future, and hibernating + hacking away at my own stuff for the next week!!&lt;/p&gt;

</description>
        <pubDate>Sun, 29 May 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-13</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-13</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 12</title>
        <description>&lt;p&gt;Figured out how to use asdf (it’s a version manager!) to manage different versions of Ruby and Python on my laptop. &lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;Had to do it because I was struggling to install Shopify’s CLI when my ruby version kept pointing to the ancient Mac OSX system one instead of the one I actually wanted.&lt;/p&gt;

&lt;p&gt;Lighthouse says my site could use ARIA and better contrast.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 May 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/articles/22/day-12</link>
        <guid isPermaLink="true">http://localhost:4000/articles/22/day-12</guid>
        
        
        <category>days</category>
        
      </item>
    
  </channel>
</rss>
