<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tufte-Jekyll</title>
    <description>A Jekyll theme for content-rich sites</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 08 Nov 2022 11:52:28 -0500</pubDate>
    <lastBuildDate>Tue, 08 Nov 2022 11:52:28 -0500</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>day 53 - EMNLP 2022 search + making mobile look better</title>
        <description>&lt;p&gt;Implemented search by title – filtering by track got me to learn how to use .filter(), search made me learn how to use .include(). Fixed some styling issues by adding text-wrap to my labels for each card, which was causing a horizontal overflow problem on mobile (esp for conference tracks with very long names) earlier on. My div with the filter+search elements was also way outside the viewport, which made me realise that divs don’t inherit the dimensions of parents. So I ended up using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fit-content&lt;/code&gt;&lt;/a&gt; to get my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;div&lt;/code&gt; to fit the container. Frontend is fun, but it also makes my head hurt because there are so many kinds of behaviours to learn (don’t even mention flexbox / grid).&lt;/p&gt;

&lt;p&gt;But anyway, I’m glad that it kinda works now. There are a few more things I would like to learn to implement:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;saving papers, and viewing them with localStorage&lt;/li&gt;
  &lt;li&gt;chaining multiple filters (e.g. filtering by submission type + track)&lt;/li&gt;
  &lt;li&gt;allow multi-select for conference tracks, so that I can view several tracks’ papers at once, as opposed to one track at a time (which is the case with my current dropdown)&lt;/li&gt;
  &lt;li&gt;automating the generation of unique values for each type of filter (to get the array of conference tracks, I went to some random website that helps you remove duplicates from lists… not my best moment to be honest). The idea here, I guess, is to create something I can easily use for another kind of entity that I want to view and filter.&lt;/li&gt;
  &lt;li&gt;make header sticky so my header doesn’t jump about depending on the number of search results&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 08 Nov 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/posts/day-53-emnlp-2022-search-+-making-mobile-look-better</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-53-emnlp-2022-search-+-making-mobile-look-better</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 52 - adding filtering to the EMNLP 2022 paper view</title>
        <description>&lt;p&gt;Added filtering by conference track. I stored the list of unique tracks in a file called track.js and exported it to components that needed it. Mapped values in tracks to their own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;option&amp;gt;&amp;lt;/option&amp;gt;&lt;/code&gt; elements in a dropdown, and then added conditions to check whether any option was selected (if not I would just show all papers). Added labels for each card to show conference track, submission type and acceptance status.&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Nov 2022 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/posts/day-52</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-52</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 46 - day 51</title>
        <description>&lt;p&gt;Nov: [1, 2, 3, 4, 5]&lt;/p&gt;

&lt;p&gt;Finished CS50’s final pset which involved learning about Flask. I’ve just started on my final project – a site that displays accepted papers for EMNLP 2022. You can check it my work so far at &lt;a href=&quot;https://emnlp2022.tomoe.asia&quot;&gt;emnlp2022.tomoe.asia&lt;/a&gt; I’m doing this as it’s a good opportunity to work with some real-world data and also respond to a problem I’m having – the list of accepted papers is currently only available in this massive Excel which is incredibly hard to read.&lt;/p&gt;

&lt;h1 id=&quot;things-i-expect-to-learn&quot;&gt;Things I expect to learn&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;How to build components, and pass props&lt;/li&gt;
  &lt;li&gt;Managing state: how do I pass information from a filter component to the cards components, and update the card components (which show papers) accordingly?&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;progress-so-far&quot;&gt;Progress so far:&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Display all papers, and show abstracts on click.&lt;/li&gt;
  &lt;li&gt;Experimented a bit with filtering and checked out &lt;a href=&quot;https://www.radix-ui.com/&quot;&gt;Radix UI&lt;/a&gt;, but have decided to try to build my components as much as possible so that I know what’s going on.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sat, 05 Nov 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-46-day-51</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-46-day-51</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 25 - day 45</title>
        <description>&lt;p&gt;This month I’ve been working through CS50. I’ve also managed to get into a semi-routine, which is a big first and surprise to me. I learn/code for the first 1.5h of my day (whenever my waking time might be) before moving on to my work obligations. This might not work for everyone as I happen to be privileged enough to work from home + have a really understanding supervisor who gives me autonomy regarding work hours and recognises that learning is part of my job.&lt;/p&gt;

&lt;p&gt;This month I’ve coded on the following days in Oct: a = [6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]. The dev console tells me that means it’s been 21 days (used a.length because I was too lazy to count it manually). Which means I’m almost halfway through the 100 days (in total, not in a row).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I restarted CS50 for 2 main reasons:&lt;/p&gt;

&lt;p&gt;(1) closure&lt;/p&gt;

&lt;p&gt;Partially to get closure on the fact that it was the first thing I ever touched relating to code, but I never finished it because I was very new and not at a state where I have the kind of will and faith to finish it. But it’s been a good month so far – I’ve learnt a lot, and also feel like I can see how I’m very different from the kid 4 years ago touching Scratch and C for the first time.&lt;/p&gt;

&lt;p&gt;(2) improving my foundations&lt;/p&gt;

&lt;p&gt;My data structures &amp;amp; algo knowledge is really weak and I wanted to get a better handle on things like pointers, hash tables. After going through the first 5 weeks of content in C, I can appreciate why they force us to use C – you’ll understand memory allocation and the relevance of linked lists a lot better when you understand the kinds of problems faced by storing stuff in contiguous slots of memory.&lt;/p&gt;

&lt;p&gt;Anyway, strongly recommend doing the course. And also would like to remind anyone who’s been discouraged by the course that it’s okay to take a step back and learn other things, then return to it.&lt;/p&gt;

&lt;p&gt;Things work out in the fullness of time.&lt;/p&gt;

</description>
        <pubDate>Fri, 28 Oct 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-25</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-25</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 24</title>
        <description>&lt;p&gt;I returned to CS50 after a long time. I have a minor regret about not having finished it, so I’m going to try and get it done this time round. I usually feel terrible about my skills, but I’ve realised that I’ve grown a lot after attempting Mario (more) and realising I got it a lot faster than my younger self would have back then (although I had to keep looking up C syntax and dealing with the missing ;s).&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Oct 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-24</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-24</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 23</title>
        <description>&lt;p&gt;Learnt more about Chrome extensions by updating the manifest of a Chrome extension that wasn’t working for me. Was chatting with a friend (&lt;a href=&quot;https://github.com/kiittsunne&quot;&gt;@kiittsuune&lt;/a&gt;) about how SimplyGo doesn’t total up transactions for you, and they put together a &lt;a href=&quot;https://gist.github.com/kiittsunne/ff4a5b6faba000fff4fbbd02c4d640d6&quot;&gt;Chrome extension&lt;/a&gt; in a night. However, it wasn’t working for me (i.e. when I clicked the extension icon, nothing would happen) until I modified the manifest in line with Chrome’s dev documentation. You can check it out &lt;a href=&quot;https://gist.github.com/nondescryptid/78504cab609dc189620736745f829e2a&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Oct 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-23</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-23</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>How to think about work such that it doesn&apos;t suck</title>
        <description>&lt;p&gt;I’ve found myself sending similar screenshots/quotes to friends that I found helpful, so now I’m trying to park everything in one place.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;These are the pieces of writing I’ve found myself returning to, and referring others to over time, accompanied by my own random comments. They mostly relate to thinking about labour, time and everyday decision-making.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;table of contents&lt;/em&gt;&lt;/p&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#work-is-infinite-but-its-not-a-bad-thing&quot; id=&quot;markdown-toc-work-is-infinite-but-its-not-a-bad-thing&quot;&gt;&lt;strong&gt;Work is infinite but it’s not a bad thing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#problems-dont-have-to-be-technically-challenging-for-them-to-be-worthwhile&quot; id=&quot;markdown-toc-problems-dont-have-to-be-technically-challenging-for-them-to-be-worthwhile&quot;&gt;&lt;strong&gt;Problems don’t have to be technically challenging for them to be worthwhile&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#being-clear-on-trade-offs&quot; id=&quot;markdown-toc-being-clear-on-trade-offs&quot;&gt;&lt;strong&gt;Being clear on trade-offs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;work-is-infinite-but-its-not-a-bad-thing&quot;&gt;&lt;strong&gt;Work is infinite but it’s not a bad thing&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Many people seem to think the ‘good’ state of being, the ‘ground’ 
state, is a relaxed state, a state with lots of rest and very little 
action. Because they think the ground state is the relaxed state, they 
act like maintaining any other state requires effort, requires 
suffering.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;This is a failure mode that I used to fall into pretty regularly. I 
would model my work as a finite stream of tasks that needed doing. I’d 
think “once I’ve done the laundry and bought new shoes and finished the 
grocery shopping and fixed the bugs in my code and finished the big 
refactor, everything will be in order, and I’ll be able to rest.” And in
 that state of mind, every new email that hit my inbox, every new bug 
discovered in my code, every tool of mine that wore down and needed 
repair, would deal me damage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;I was modeling my work as finite, with the rest state being the state
where all tasks were completed, and so every new task would push me 
further from that precious rest state and wear me down.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;But the work that needs to be done is not a finite list of tasks, it 
is a neverending stream. Clothes are always getting worn down, food is 
always getting eaten, code is always in motion. &lt;strong&gt;The goal is not to 
finish all the work before you; for that is impossible. The goal is 
simply to move through the work. Instead of struggling to reach the end of the stream, simply focus on moving along it.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;– Nate Soares, &lt;a href=&quot;https://mindingourway.com/rest-in-motion/&quot;&gt;Rest in Motion&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The magical property of work is that there is always more of it. It’s there when you sleep, and it’s there when you wake up. Go to sleep and stop punishing yourself. Resting is part of the work.&lt;/p&gt;

&lt;h3 id=&quot;problems-dont-have-to-be-technically-challenging-for-them-to-be-worthwhile&quot;&gt;&lt;strong&gt;Problems don’t have to be technically challenging for them to be worthwhile&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;“Difficult” tends to equate to “prestigious” in school because it’s used as a proxy for your ability to suffer and also deal with technically hard things. But as Ben Kuhn points out in &lt;a href=&quot;https://www.benkuhn.net/hard/&quot;&gt;“You don’t need to work on hard problems”&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;School is a closed-world domain—you are solving crisply-defined puzzles (multiply these two numbers, implement this algorithm, write a book report by this rubric), your solution is evaluated on one dimension (letter grade), and the performance ceiling (an A+) is low. The only form of progression is to take harder courses. If you try to maximize your rewards under this reward function, you’ll end up looking for trickier and trickier puzzles that you can get an A+ on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;The real world is the polar opposite. You’ll have some ultra-vague end goal, like “help people in sub-Saharan Africa solve their money problems,” based on which you’ll need to prioritize many different sub-problems. A solution’s performance has many different dimensions (speed, reliability, usability, repeatability, cost, …)—you probably don’t even know what all the dimensions are, let alone which are the most important. The range of plausible outcomes covers orders of magnitude and the ceiling is saving billions of lives. The habits you learn by working on problem sets won’t help you here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Leaving school presents you with a lot of agency, which is terrifying in its own right. I graduated a few months back and find that I’m mainly chewing over (1) What should I be optimizing for? and (2) How do I cultivate my ability to deal with the higher-order question of what problems I should be working on, as opposed to finding ways to work on problems that have already been presented to me? I don’t really have great answers for them yet.&lt;/p&gt;

&lt;h3 id=&quot;being-clear-on-trade-offs&quot;&gt;&lt;strong&gt;Being clear on trade-offs&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Being clear on your motivations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;R.W. Hamming’s &lt;a href=&quot;https://www.cs.utexas.edu/users/dahlin/bookshelf/hamming.html&quot;&gt;“You and your research”&lt;/a&gt; has a nice heuristic for this:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;What are the important problems in your field?&lt;/li&gt;
  &lt;li&gt;What important problems are you working on / might lead to important results?&lt;/li&gt;
  &lt;li&gt;If what you are working on is not important and is not likely to lead to important things, why are you working on them?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This doesn’t mean that everything has to be instrumental, just that it’s a good exercise to clarify what your motivations for doing different things are. Sometimes the answer is “I just find it fun” and that’s okay.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose vs curiosity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There’s this piece by Scott Young (&lt;a href=&quot;https://www.scotthyoung.com/blog/2009/02/02/the-power-of-curiosity/&quot;&gt;The Power of Curiosity&lt;/a&gt;) where he states that actions can mainly be thought of as motivated by 2 things: purpose and curiosity.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are essentially two different modes of thought you can apply when deciding what to do: purpose and curiosity. Acting through purpose means accomplishing a project or task because you have a known outcome. Writing this article is an act of purpose, I want to update my blog with new content, so I’m writing with the intent of finishing an article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Curiosity, however, is a more interesting perspective that is often underused. In taking on an activity because of curiosity, you aren’t taking on a task despite an uncertain outcome. You’re taking on a task or project, because the result is uncertain. While acting from purpose comes from the need to achieve something known, curiosity drives us to learn something new.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This drove me to think about how much my actions have been skewed towards purpose more than curiosity – I studied to pass and get my degree, I worked a bunch of jobs to make a living, etc etc. But I hadn’t really been deliberately thinking about how to make space for curiosity and play in my life – things I do just because I like them. Some people thrive off purpose, but I realise I feel better when I’ve made space for something curious and playful, because I am the type that can’t really be prodded to do things I don’t like. I’ve realised that when I am forced to do things I dislike, it is bad for me and anyone else involved.&lt;/p&gt;

&lt;p&gt;When it comes to programming, I used to have this frame of mind that placed a lot of pressure on myself to come up with something &lt;em&gt;portfolio-worthy&lt;/em&gt;, something that would get me a software engineering job and feel like all the uncertainty etc paid off. It’s not the best mindset to have, and continuing to place that pressure on myself would’ve killed my will to keep making. I realise that there’s a tradeoff as my history/experience looks very haphazard (re: my 100 days of code log), but I think giving myself the space to just be curious and sniff about like a dog is better in the long run. Right now, I don’t have to optimize for getting a SWE job ASAP because I’ve already got a day job in legal research that involves some programming, and have enough time in the evenings and weekends to do random stuff I find fun. Sometimes it’s trying to fiddle with SimplyGo’s website to add up my transactions because they won’t do that (idk why), sometimes it’s fiddling with p5.js to make little circles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/circles.gif&quot; width=&quot;300&quot; /&gt;&lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;Reminds me of Rainer Maria Rilke’s ‘I live my life in widening circles’ &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;As a random aside, things seem to become cool when people are deeply interested in them. It’s the kind of commitment and deep attention that craftmanship has that makes it fascinating, more so than the actual subject matter. Am I a serious coffee drinker / have opinions about coffee? No. But will I watch James Hoffman look into Nespresso’s patents in his review of the Nespresso Vertuo? Yes.&lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;Things with similar energy include Lindsay Ellis’ &lt;a href=&quot;https://www.youtube.com/watch?v=zhWWcWtAUoY&quot;&gt;Into the Omegaverse: How a Fanfic Trope Landed in Federal Court&lt;/a&gt; and Solar Sands’ &lt;a href=&quot;https://www.youtube.com/watch?v=lFb7BOI_QFc&quot;&gt;Why do &apos;Corporate Art Styles&apos; Feel Fake?&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Noting when past beliefs haven’t caught up with present reality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It takes a while for attitudes to update. One of the big beliefs I have that isn’t really reflective of reality is my scarcity mindset. For a while I felt like I had to work a lot to earn money, and it continued to endure even when those circumstances weren’t really present anymore. I felt like I didn’t really have options, and that scarcity mindset translated to non-monetary opportunities too where I felt like I should just take on whatever I can get. At some point, I started getting multiple things at once, but hadn’t let go of that mindset. This led me to overcommit, underdeliver and kind of fail to be selective about the things I was doing.&lt;/p&gt;

&lt;p&gt;We constantly trade our time for various things like convenience or purpose or maintaining our relationships or saving/making money. It’s important to make sure our beliefs about where our time should go are up-to-date.&lt;/p&gt;

&lt;p&gt;I recently had a chat with a friend about him wanting to do a computer vision side project, but needing a better laptop for it. He could save a few hundred dollars if he bought it when he comes to visit Singapore next year, but it’d mean delaying that project by about 3 months.&lt;/p&gt;

&lt;p&gt;The question(s) kinda become:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Is a few hundred dollars worth 3 months that you could’ve spent working on your side project? (Question of personal opinion)&lt;/li&gt;
  &lt;li&gt;In partially deciding the above: Does it take you more than 3 months to make a few hundred dollars? (Factual - answer is no)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I often think the same way, so I try to pause whenever I feel seized by this sudden fear and feeling of urgency to save / choose the thing that costs the least and ask myself if it’s informed by my current circumstances, or if it’s like a reflex that responds to problems that don’t exist anymore.&lt;/p&gt;

&lt;p&gt;Stuff that I like reading to help with these trade-offs:&lt;/p&gt;

&lt;p&gt;Dwarkesh Patel, &lt;a href=&quot;https://www.dwarkeshpatel.com/p/barbell-strategies&quot;&gt;“Examples of barbell strategies”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Katja Grace, &lt;a href=&quot;https://meteuphoric.com/2014/03/25/how-to-trade-money-and-time/&quot;&gt;“How to trade money and time”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Milan Cvitkovic, &lt;a href=&quot;https://milan.cvitkovic.net/writing/things_youre_allowed_to_do/&quot;&gt;“Things you’re allowed to do”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your time is finite and not all of it is fungible&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our time is finite.&lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;As Death says in Vol. 7 (&lt;em&gt;Brief Lives&lt;/em&gt;) of The Sandman: ‘You lived what anybody gets, Bernie. You got a lifetime. No more. No less.’ &lt;/span&gt; I have this Chrome extension called &lt;a href=&quot;https://chrome.google.com/webstore/detail/the-last-sunday-reminder/aiojhapcgfgmiacbbjfgedhlcchmpelh?hl=en#:~:text=This%20extension%20shows%20you%20a,name%20and%20date%20of%20birth.&quot;&gt;The Last Sunday&lt;/a&gt; that counts down how many weeks you have left and displays them whenever you open a new tab, assuming that your lifespan ends at 80. I have 2949 Sundays left at the time of writing.&lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;This is a very divisive extension as people have either found it quite sensible, or deeply morbid &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;As much as the fact that time being finite should make us be more selective with how we spend our time, it also shouldn’t invite this toxic urge to treat all time as fungible for work – like oh, I shouldn’t have taken that nap / gone out with friends / done something fun because I could’ve been working or studying or Getting Ahead. When you feel tired or bad about yourself, that time is not realistically free for working.&lt;/p&gt;

&lt;p&gt;–&lt;/p&gt;

&lt;p&gt;Anyway, that’s about it for now. If you’ve read this far - I’d love to hear what your personal canon is like as I’m always on the lookout for new things to read.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Sep 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/thinking-about-work</link>
        <guid isPermaLink="true">http://localhost:4000/posts/thinking-about-work</guid>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Streaming from your Oculus Quest 2 to Zoom while using Air Link, but your PC also has no WiFi</title>
        <description>&lt;p&gt;I don’t know why you’d want to do this too, or have the same combination of problems. But if you do, here you go. &lt;!--more--&gt;&lt;/p&gt;

&lt;h1 id=&quot;context&quot;&gt;Context&lt;/h1&gt;

&lt;p&gt;I was helping with organising a conference that involved an experiential VR component, where conference participants could try out apps on the Oculus Quest 2. However, one of the applications featured was a game on Steam that had no native Oculus app to install. &lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;P.S. This was SR4-2, if you attended the conference. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;This meant that we had to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Download the Oculus app for PC (btw it has no Mac support)&lt;/li&gt;
  &lt;li&gt;Pair the Oculus with the PC via a wired connection (USB-C) or Air Link (wireless, via WiFi)&lt;/li&gt;
  &lt;li&gt;Start the game in Steam and choose “Launch with Steam VR”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the conference was a hybrid conference, so we also had to:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Figure out how to stream what was happening on the Oculus to Zoom&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-not-just-connect-it-with-a-wired-connection&quot;&gt;Why not just connect it with a wired connection?&lt;/h2&gt;
&lt;p&gt;We could’ve used a wired connection, but there was a concern about the experience being suboptimal (range of movement being limited by the length of the USB-C cable) and also risking participants tripping over wires.&lt;/p&gt;

&lt;h2 id=&quot;problems-with-air-link-and-knock-on-problems-with-streaming&quot;&gt;Problems with Air Link and knock-on problems with streaming&lt;/h2&gt;
&lt;p&gt;The PC we were using had no WiFi, and Oculus Air Link needs WiFi to work.&lt;label for=&quot;sidenote-id&quot; class=&quot;margin-toggle sidenote-number&quot;&gt;&lt;/label&gt;&lt;input type=&quot;checkbox&quot; id=&quot;sidenote-id&quot; class=&quot;margin-toggle&quot; /&gt;&lt;span class=&quot;sidenote&quot;&gt;&lt;a href=&quot;https://www.oculus.com/blog/introducing-oculus-air-link-a-wireless-way-to-play-pc-vr-games-on-oculus-quest-2-plus-infinite-office-updates-support-for-120-hz-on-quest-2-and-more/&quot;&gt;Oculus Blog, Introducing Oculus Air Link&lt;/a&gt; &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The casting feature in Oculus (not in Air Link/wired mode) lets you show what the Oculus user is seeing if you log in on &lt;a href=&quot;https://www.oculus.com/casting/&quot;&gt;oculus.com/casting&lt;/a&gt; on Chromium browsers, when both the browser’s device and the Oculus headset are on the same network. This feature is not available if you’re connected to a PC, so you need to find some other way to show what’s going on.&lt;/p&gt;

&lt;p&gt;For the conference, we were sharing the screen of a monitor that had 5 different Chrome windows logged on to the headsets’ accounts. The 6th headset was the one that was linked to a PC, that couldn’t be shown with the same method.&lt;/p&gt;

&lt;h2 id=&quot;solutionwhat-we-ended-up-doing-wifi-adapter--obs-virtual-camera&quot;&gt;Solution/What We Ended Up Doing: WiFi Adapter + OBS Virtual Camera&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;Acquire WiFi Adapter (We used an &lt;a href=&quot;https://www.edimax.com/edimax/merchandise/merchandise_detail/data/edimax/global/wireless_adapters_ac1750_dual-band/ew-7833uac&quot;&gt;Edimax AC1750&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;Set it up - install driver and whatnot&lt;/li&gt;
  &lt;li&gt;Go to Settings &amp;gt; Network &amp;amp; Internet &amp;gt; Mobile hotspot&lt;/li&gt;
  &lt;li&gt;Turn on Mobile Hotspot&lt;/li&gt;
  &lt;li&gt;Connect your Oculus headset to the PC’s hotspot&lt;/li&gt;
  &lt;li&gt;Turn on Airlink -&amp;gt; select your PC from the list of devices -&amp;gt; click Launch&lt;/li&gt;
  &lt;li&gt;Launch your Steam game with Steam VR&lt;/li&gt;
  &lt;li&gt;Use OBS Virtual Camera to do Window Capture of the Steam game’s window, then Start Virtual Camera&lt;/li&gt;
  &lt;li&gt;Join Zoom Meeting and change camera output to OBS Camera&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 23 Sep 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/streaming-from-your-oculus-quest-2-while-using-air-link</link>
        <guid isPermaLink="true">http://localhost:4000/posts/streaming-from-your-oculus-quest-2-while-using-air-link</guid>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>day 22</title>
        <description>&lt;p&gt;Tried out implementing a UI for question-answering with BERT (using functions written by Chris McCormick) on Streamlit at &lt;a href=&quot;https://bert.tomoe.asia&quot;&gt;bert.tomoe.asia&lt;/a&gt; but it crashes when there are long spans of text entered – not sure if it’s due to memory constraints (free tier has 800MB of memory) or what. I’ll try using a smaller BERT model tomorrow and see if it makes a difference.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Sep 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-22</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-22</guid>
        
        
        <category>days</category>
        
      </item>
    
      <item>
        <title>day 21</title>
        <description>&lt;p&gt;Took part in a Go workshop by Chuk organised by GeeksHacking, where we made a command line tool that interacts with the Boardgame Atlas API to search for board games.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;bit.ly/golang_for_programmers&quot;&gt;Slides can be found here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1S2bS0Wvevd3_Cb8DwDXYD4Swwq_3IDlfVuFY1V2lesg/edit#slide=id.p&quot;&gt;alt link&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;go&quot;&gt;Go&lt;/h1&gt;
&lt;p&gt;Languages can be thought of in terms of STRONG vs WEAK typing, and static v dynamic&lt;/p&gt;

&lt;h1 id=&quot;where-go-is-used&quot;&gt;Where Go is used&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Infra like Kubernetes and Docker&lt;/li&gt;
  &lt;li&gt;Cloud native devt (writing RESTful [message-based] web apps; gRPC (another service style))&lt;/li&gt;
  &lt;li&gt;Replacing existing infra such as CoreDNS/Caddy (reverse proxy - nginx is an alternative to Caddy. Chuk likes Caddy bc it just has one binary to deal with)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;go-data-types&quot;&gt;Go Data Types&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;string&lt;/li&gt;
  &lt;li&gt;rune (equivalent of a char in JS)&lt;/li&gt;
  &lt;li&gt;number int, uint (no negative numbers), floats&lt;/li&gt;
  &lt;li&gt;complex&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name string

var age uint8 = 21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;arrays--slices-dynamic-arrays&quot;&gt;Arrays &amp;amp; Slices (dynamic arrays)&lt;/h1&gt;

&lt;h2 id=&quot;arrays-fixed-size&quot;&gt;Arrays (fixed size)&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var name [5]string
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;slices&quot;&gt;Slices&lt;/h2&gt;

&lt;p&gt;Looks like you declare the upper limit of memory it can have (e.g. 5 items) and then append items without necessary using all of the memory allocated&lt;/p&gt;

&lt;p&gt;TODO: look up arrays vs Slices&lt;/p&gt;

&lt;h1 id=&quot;loops&quot;&gt;Loops&lt;/h1&gt;

&lt;h1 id=&quot;pointers&quot;&gt;Pointers&lt;/h1&gt;

&lt;p&gt;Python etc have a concept of a reference - a pointer-like thing to an object&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;in Java, objects arrays etc are references but primitives are not references.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chuk: “You wont ask an F1 driver to ask slowly right. Sometimes you want the freedom to do stupid things [as an engineer].”&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;name := &quot;fred&quot;

&amp;amp;name #gives you the address of a var 

*&amp;amp;name == &quot;fred&quot; # gives you contents of the address 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This allows you to have double pointers that allow “dynamic addressing” (TODO: look up)&lt;/p&gt;

&lt;p&gt;And anything can be passed by reference or value into functions&lt;/p&gt;

&lt;h1 id=&quot;creating-custom-types&quot;&gt;Creating custom types&lt;/h1&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type natural unit32
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or create objects&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Customer struct {
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Function types&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Apply[T any] func(T,T)T 

# function takes 2 params of type T, and returns type T. 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;visibility-of-vars&quot;&gt;Visibility of vars&lt;/h1&gt;
&lt;p&gt;If a var starts with uppercase it is public, and lowercase is private.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Chuk: “You either see it or you don’t”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;class-like&quot;&gt;Class-like&lt;/h1&gt;
&lt;p&gt;Can write functions that are only accessible by certain structs&lt;/p&gt;

&lt;p&gt;Receiver function must be in the same module&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Critique of Go: You extend or implement an interface, but there’s no explicit stuff like that in Go. Go handles it implicitly where if your struct has methods of the interface, it is considered implemented.&lt;/p&gt;

  &lt;p&gt;This makes reading code a bit difficult because a param can require a reader but you have to figure out which structs implement a reader, then hunt down the methods in that reader.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;TODO: Find out what’s a thread … Chuk is talking about threads but I don’t know what it’s about&lt;/p&gt;

&lt;h1 id=&quot;communicating-between-routines&quot;&gt;Communicating between routines&lt;/h1&gt;

&lt;p&gt;Use a built-in primitive called channels.&lt;/p&gt;

&lt;p&gt;To read:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.educative.io/answers/what-are-channels-in-golang&quot;&gt;What are channels in Golang?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;todays-workshop&quot;&gt;Today’s workshop&lt;/h1&gt;

&lt;p&gt;Building a command line tool to search for board games&lt;/p&gt;

&lt;p&gt;If there’s time:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Pretty print results&lt;/li&gt;
  &lt;li&gt;Cross compile to other platforms e.g. Linux to Windows&lt;/li&gt;
  &lt;li&gt;Write a multi threaded version if time permits&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;initialise-project-as-a-go-project&quot;&gt;Initialise project as a Go project&lt;/h2&gt;
&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go mod init&lt;/code&gt; in the directory where your project is. It should create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go.mod&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;my-first-go-program-&quot;&gt;My first Go program :)&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package main

func main() {
    fmt.Println(&quot;hello, world&quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run programs with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go run .&lt;/code&gt; in the directory where your go program file is stored.&lt;/p&gt;

&lt;h2 id=&quot;boardgame-api&quot;&gt;Boardgame API&lt;/h2&gt;

&lt;p&gt;We are using the Search endpoint: https://www.boardgameatlas.com/api/docs/search&lt;/p&gt;

&lt;p&gt;We need:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Search term&lt;/li&gt;
  &lt;li&gt;Client id&lt;/li&gt;
  &lt;li&gt;Limit (e.g. 10)&lt;/li&gt;
  &lt;li&gt;Skip (e.g. 0)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;compiling&quot;&gt;Compiling&lt;/h2&gt;
&lt;p&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go build .&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go run&lt;/code&gt; is for devt purposes.&lt;/p&gt;

&lt;h2 id=&quot;questions&quot;&gt;Questions&lt;/h2&gt;
&lt;p&gt;What are pointers and references?
What does strong and weak typing mean, and when would someone prefer a language that’s strongly/weakly typed?&lt;/p&gt;

&lt;h2 id=&quot;adding-colors&quot;&gt;Adding colors:&lt;/h2&gt;
&lt;p&gt;Cool repo to add colors to the command line output: https://github.com/fatih/color
run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go get github.com/fatih/color&lt;/code&gt; in your project dir&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Sep 2022 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/posts/day-21</link>
        <guid isPermaLink="true">http://localhost:4000/posts/day-21</guid>
        
        
        <category>days</category>
        
      </item>
    
  </channel>
</rss>
